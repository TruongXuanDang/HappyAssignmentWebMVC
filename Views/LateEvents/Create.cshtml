@model HappyMVCAssignment.Models.LateEvent

@{
    ViewBag.Title = "Create";
    var lateSettings = ViewBag.lateSettings;
    var errorMessage = ViewBag.errorMessage;
}

<h2>Create</h2>


@using (Html.BeginForm(new { })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>LateEvent</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LateDate, new { htmlAttributes = new { @class = "form-control",  @Value = DateTime.Now.ToShortDateString() } })
                @Html.ValidationMessageFor(model => model.LateDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LateType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.LateType,"Please Select Type", htmlAttributes: new { @class = "form-control" ,@id="lateType"})
                @Html.ValidationMessageFor(model => model.LateType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LateMoney, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LateMoney, new { htmlAttributes = new { @class = "form-control",@id="lateMoney", @readonly="readonly"} })
                @Html.ValidationMessageFor(model => model.LateMoney, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PushCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PushCount, new { htmlAttributes = new { @class = "form-control",@id="pushCount", @readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.PushCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentId, "StudentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control",@id="studentId" })
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="@Url.Content("~/Scripts/LateEvents/Create.js")">
        if (@errorMessage != null) {
            alert(@errorMessage);
        };
    </script>
}
